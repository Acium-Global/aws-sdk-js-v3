"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getIdNormalizerPlugin = exports.idNormalizerMiddlewareOptions = exports.idNormalizerMiddleware = void 0;
const constants_1 = require("./constants");
const IDENTIFIER_PARAMETERS = ["DelegationSetId", "HostedZoneId", "Id"];
function idNormalizerMiddleware() {
    return (next) => async (args) => {
        const input = { ...args.input };
        for (const paramName of IDENTIFIER_PARAMETERS) {
            const param = input[paramName];
            if (param) {
                input[paramName] = param.replace(constants_1.IDENTIFIER_PREFIX_PATTERN, "");
            }
        }
        return next({
            ...args,
            input,
        });
    };
}
exports.idNormalizerMiddleware = idNormalizerMiddleware;
exports.idNormalizerMiddlewareOptions = {
    step: "initialize",
    tags: ["ROUTE53_IDS"],
    name: "idNormalizerMiddleware",
    override: true,
};
// eslint-disable-next-line @typescript-eslint/no-unused-vars
const getIdNormalizerPlugin = (unused) => ({
    applyToStack: (clientStack) => {
        clientStack.add(idNormalizerMiddleware(), exports.idNormalizerMiddlewareOptions);
    },
});
exports.getIdNormalizerPlugin = getIdNormalizerPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaWQtbm9ybWFsaXplci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pZC1ub3JtYWxpemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVVBLDJDQUF3RDtBQVF4RCxNQUFNLHFCQUFxQixHQUFrQyxDQUFDLGlCQUFpQixFQUFFLGNBQWMsRUFBRSxJQUFJLENBQUMsQ0FBQztBQUV2RyxTQUFnQixzQkFBc0I7SUFDcEMsT0FBTyxDQUFnQyxJQUFvQyxFQUFrQyxFQUFFLENBQzdHLEtBQUssRUFBRSxJQUFxQyxFQUE0QyxFQUFFO1FBQ3hGLE1BQU0sS0FBSyxHQUFHLEVBQUUsR0FBSSxJQUFJLENBQUMsS0FBYSxFQUFFLENBQUM7UUFDekMsS0FBSyxNQUFNLFNBQVMsSUFBSSxxQkFBcUIsRUFBRTtZQUM3QyxNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDL0IsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsS0FBSyxDQUFDLFNBQVMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMscUNBQXlCLEVBQUUsRUFBRSxDQUFDLENBQUM7YUFDakU7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO1lBQ1YsR0FBRyxJQUFJO1lBQ1AsS0FBSztTQUNOLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNOLENBQUM7QUFoQkQsd0RBZ0JDO0FBRVksUUFBQSw2QkFBNkIsR0FBNkI7SUFDckUsSUFBSSxFQUFFLFlBQVk7SUFDbEIsSUFBSSxFQUFFLENBQUMsYUFBYSxDQUFDO0lBQ3JCLElBQUksRUFBRSx3QkFBd0I7SUFDOUIsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUYsNkRBQTZEO0FBQ3RELE1BQU0scUJBQXFCLEdBQUcsQ0FBQyxNQUFXLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQzFFLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxxQ0FBNkIsQ0FBQyxDQUFDO0lBQzNFLENBQUM7Q0FDRixDQUFDLENBQUM7QUFKVSxRQUFBLHFCQUFxQix5QkFJL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBJbml0aWFsaXplSGFuZGxlcixcbiAgSW5pdGlhbGl6ZUhhbmRsZXJBcmd1bWVudHMsXG4gIEluaXRpYWxpemVIYW5kbGVyT3B0aW9ucyxcbiAgSW5pdGlhbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIEluaXRpYWxpemVNaWRkbGV3YXJlLFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSURFTlRJRklFUl9QUkVGSVhfUEFUVEVSTiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIElkZW50aWZpZXJCZWFyZXIge1xuICBEZWxlZ2F0aW9uU2V0SWQ/OiBzdHJpbmc7XG4gIEhvc3RlZFpvbmVJZD86IHN0cmluZztcbiAgSWQ/OiBzdHJpbmc7XG59XG5cbmNvbnN0IElERU5USUZJRVJfUEFSQU1FVEVSUzogQXJyYXk8a2V5b2YgSWRlbnRpZmllckJlYXJlcj4gPSBbXCJEZWxlZ2F0aW9uU2V0SWRcIiwgXCJIb3N0ZWRab25lSWRcIiwgXCJJZFwiXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGlkTm9ybWFsaXplck1pZGRsZXdhcmUoKTogSW5pdGlhbGl6ZU1pZGRsZXdhcmU8YW55LCBhbnk+IHtcbiAgcmV0dXJuIDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcj4obmV4dDogSW5pdGlhbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+KTogSW5pdGlhbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+ID0+XG4gICAgYXN5bmMgKGFyZ3M6IEluaXRpYWxpemVIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEluaXRpYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgICAgIGNvbnN0IGlucHV0ID0geyAuLi4oYXJncy5pbnB1dCBhcyBhbnkpIH07XG4gICAgICBmb3IgKGNvbnN0IHBhcmFtTmFtZSBvZiBJREVOVElGSUVSX1BBUkFNRVRFUlMpIHtcbiAgICAgICAgY29uc3QgcGFyYW0gPSBpbnB1dFtwYXJhbU5hbWVdO1xuICAgICAgICBpZiAocGFyYW0pIHtcbiAgICAgICAgICBpbnB1dFtwYXJhbU5hbWVdID0gcGFyYW0ucmVwbGFjZShJREVOVElGSUVSX1BSRUZJWF9QQVRURVJOLCBcIlwiKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICByZXR1cm4gbmV4dCh7XG4gICAgICAgIC4uLmFyZ3MsXG4gICAgICAgIGlucHV0LFxuICAgICAgfSk7XG4gICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IGlkTm9ybWFsaXplck1pZGRsZXdhcmVPcHRpb25zOiBJbml0aWFsaXplSGFuZGxlck9wdGlvbnMgPSB7XG4gIHN0ZXA6IFwiaW5pdGlhbGl6ZVwiLFxuICB0YWdzOiBbXCJST1VURTUzX0lEU1wiXSxcbiAgbmFtZTogXCJpZE5vcm1hbGl6ZXJNaWRkbGV3YXJlXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZXhwb3J0IGNvbnN0IGdldElkTm9ybWFsaXplclBsdWdpbiA9ICh1bnVzZWQ6IGFueSk6IFBsdWdnYWJsZTxhbnksIGFueT4gPT4gKHtcbiAgYXBwbHlUb1N0YWNrOiAoY2xpZW50U3RhY2spID0+IHtcbiAgICBjbGllbnRTdGFjay5hZGQoaWROb3JtYWxpemVyTWlkZGxld2FyZSgpLCBpZE5vcm1hbGl6ZXJNaWRkbGV3YXJlT3B0aW9ucyk7XG4gIH0sXG59KTtcbiJdfQ==