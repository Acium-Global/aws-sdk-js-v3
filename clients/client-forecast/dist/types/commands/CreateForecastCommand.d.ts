import { ForecastClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../ForecastClient";
import { CreateForecastRequest, CreateForecastResponse } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface CreateForecastCommandInput extends CreateForecastRequest {
}
export interface CreateForecastCommandOutput extends CreateForecastResponse, __MetadataBearer {
}
/**
 * <p>Creates a forecast for each item in the <code>TARGET_TIME_SERIES</code> dataset that was
 *       used to train the predictor. This is known as inference. To retrieve the forecast for a single
 *       item at low latency, use the  operation. To
 *       export the complete forecast into your Amazon Simple Storage Service (Amazon S3) bucket, use the <a>CreateForecastExportJob</a> operation.</p>
 *          <p>The range of the forecast is determined by the <code>ForecastHorizon</code> value, which
 *       you specify in the <a>CreatePredictor</a> request. When you query a forecast, you
 *       can request a specific date range within the forecast.</p>
 *          <p>To get a list of all your forecasts, use the <a>ListForecasts</a>
 *       operation.</p>
 *          <note>
 *             <p>The forecasts generated by Amazon Forecast are in the same time zone as the dataset that was
 *         used to create the predictor.</p>
 *          </note>
 *          <p>For more information, see <a>howitworks-forecast</a>.</p>
 *          <note>
 *             <p>The <code>Status</code> of the forecast must be <code>ACTIVE</code> before you can query
 *         or export the forecast. Use the <a>DescribeForecast</a> operation to get the
 *         status.</p>
 *          </note>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { ForecastClient, CreateForecastCommand } from "@aws-sdk/client-forecast"; // ES Modules import
 * // const { ForecastClient, CreateForecastCommand } = require("@aws-sdk/client-forecast"); // CommonJS import
 * const client = new ForecastClient(config);
 * const command = new CreateForecastCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link CreateForecastCommandInput} for command's `input` shape.
 * @see {@link CreateForecastCommandOutput} for command's `response` shape.
 * @see {@link ForecastClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class CreateForecastCommand extends $Command<CreateForecastCommandInput, CreateForecastCommandOutput, ForecastClientResolvedConfig> {
    readonly input: CreateForecastCommandInput;
    constructor(input: CreateForecastCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: ForecastClientResolvedConfig, options?: __HttpHandlerOptions): Handler<CreateForecastCommandInput, CreateForecastCommandOutput>;
    private serialize;
    private deserialize;
}
