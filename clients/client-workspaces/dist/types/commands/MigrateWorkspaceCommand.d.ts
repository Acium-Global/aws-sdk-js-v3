import { ServiceInputTypes, ServiceOutputTypes, WorkSpacesClientResolvedConfig } from "../WorkSpacesClient";
import { MigrateWorkspaceRequest, MigrateWorkspaceResult } from "../models/models_0";
import { Command as $Command } from "@aws-sdk/smithy-client";
import { Handler, MiddlewareStack, HttpHandlerOptions as __HttpHandlerOptions, MetadataBearer as __MetadataBearer } from "@aws-sdk/types";
export interface MigrateWorkspaceCommandInput extends MigrateWorkspaceRequest {
}
export interface MigrateWorkspaceCommandOutput extends MigrateWorkspaceResult, __MetadataBearer {
}
/**
 * <p>Migrates a WorkSpace from one operating system or bundle type to another, while retaining the data on the user volume.</p>
 *
 *          <p>The migration process recreates the WorkSpace by using a new root volume from the target bundle image and the user volume
 *          from the last available snapshot of the original WorkSpace. During migration, the original <code>D:\Users\%USERNAME%</code>
 *          user profile folder is renamed to <code>D:\Users\%USERNAME%MMddyyTHHmmss%.NotMigrated</code>. A new <code>D:\Users\%USERNAME%\</code>
 *          folder is generated by the new OS. Certain files in the old user profile are moved to the new user profile.</p>
 *
 *          <p>For available migration scenarios, details about what happens during migration, and best practices, see
 *          <a href="https://docs.aws.amazon.com/workspaces/latest/adminguide/migrate-workspaces.html">Migrate a WorkSpace</a>.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { WorkSpacesClient, MigrateWorkspaceCommand } from "@aws-sdk/client-workspaces"; // ES Modules import
 * // const { WorkSpacesClient, MigrateWorkspaceCommand } = require("@aws-sdk/client-workspaces"); // CommonJS import
 * const client = new WorkSpacesClient(config);
 * const command = new MigrateWorkspaceCommand(input);
 * const response = await client.send(command);
 * ```
 *
 * @see {@link MigrateWorkspaceCommandInput} for command's `input` shape.
 * @see {@link MigrateWorkspaceCommandOutput} for command's `response` shape.
 * @see {@link WorkSpacesClientResolvedConfig | config} for command's `input` shape.
 *
 */
export declare class MigrateWorkspaceCommand extends $Command<MigrateWorkspaceCommandInput, MigrateWorkspaceCommandOutput, WorkSpacesClientResolvedConfig> {
    readonly input: MigrateWorkspaceCommandInput;
    constructor(input: MigrateWorkspaceCommandInput);
    /**
     * @internal
     */
    resolveMiddleware(clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>, configuration: WorkSpacesClientResolvedConfig, options?: __HttpHandlerOptions): Handler<MigrateWorkspaceCommandInput, MigrateWorkspaceCommandOutput>;
    private serialize;
    private deserialize;
}
